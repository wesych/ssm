<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 启用注解 -->
    <context:annotation-config/>

    <!-- 扫描 -->
    <context:component-scan base-package="org.wesc.ssm.dao">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <!-- Alibaba Druid连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialSize" value="${jdbc.minPoolSize}"/>
        <property name="maxActive" value="${jdbc.maxPoolSize}"/>
        <property name="minIdle" value="${jdbc.minIdle}" />
        <property name="maxWait" value="${jdbc.maxWait}" />
        <property name="poolPreparedStatements" value="false" />
        <property name="validationQuery" value="select 1"/>
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false" />
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
        <property name="removeAbandoned" value="true" />
        <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
        <property name="logAbandoned" value="true" />
        <property name="filters" value="stat" />
    </bean>

    <!--&lt;!&ndash; 配置druid监控spring jdbc &ndash;&gt;-->
    <!--<bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor" />-->

    <!--<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">-->
        <!--<property name="patterns">-->
            <!--<list>-->
                <!--<value>org.wesc.ssm.service.*</value>-->
                <!--<value>org.wesc.ssm.dao.mapper.*</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 开启aop注解支持: 使用Cglib进行代理，因为druid部分需要代理的不是接口, 不适用于JDK动态代理 &ndash;&gt;-->
    <!--<aop:aspectj-autoproxy proxy-target-class="true" />-->

    <!--<aop:config>-->
        <!--<aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />-->
    <!--</aop:config>-->

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations">
            <array>
                <value>classpath:mapper_xml/*.xml</value>
                <value>classpath:querymapper_xml/*.xml</value>
            </array>
        </property>
        <property name="configLocation" value="classpath:mybatis-config.xml" />
    </bean>

    <!-- Mapper auto scan : find mapper to use 'MapperFactoryBean' proxy mapperImpl -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <property name="basePackage" value="org.wesc.ssm.dao.mapper,
                                            org.wesc.ssm.dao.querymapper" />
    </bean>

    <!-- 事务管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 支持事务注解@Transactional，事务管理id为默认的'transactionManager'时不需要配置transaction-manager属性，否则需要 -->
    <tx:annotation-driven />

    <!-- FlywayDB ( default location is classPath:db/migration)-->
    <bean id="flywayDb" class="org.flywaydb.core.Flyway" init-method="migrate">
        <property name="baselineOnMigrate" value="true"/>
        <property name="dataSource" ref="dataSource" />
        <property name="placeholderPrefix" value="$${" />
    </bean>


</beans>